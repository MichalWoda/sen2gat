install.packages(devtools)
install.packages('devtools')
konwersja_temp(68)
konwersja_temp = function(temperatura_f){
(temperatura_f - 32) / 1.8
}
konwersja_temp(68)
konwersja_temp(36)
konwersja_temp(34)
konwersja_temp(30)
konwersja_temp(32)
devtools::document()
mojpakiet:::konwersja_temp(2)
devtools::load_all()
devtools::load_all()
konwersja_temp(55)
devtools::document()
?konwersja_temp
devtools::document()
devtools::document()
?konwersja_temp
devtools::install()
devtools::install("mojpakiet")
devtools::load_all()
devtools::install("mojpakiet")
devtools::load_all()
devtools::document()
devtools::install("mojpakiet")
library(mojpakiet)
devtools::document()
install.packages("ggplot2")
devtools::document()
devtools::document()
devtools::load_all()
install.packages('mojpakiet.Rproj')
devtools::install("mojpakiet")
devtools::install('E:/mojpakiet/')
devtools::document()
devtools::install('E:/mojpakiet/')
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::load_all()
devtools::check()
devtools::check()
devtools::document()
devtools::check()
devtools::load_all()
devtools::check()
?konwersja_temp
devtools::install()
devtools::document()
devtools::load_all()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::install("mojpakiet")
devtools::check()
devtools::install("mojpakiet")
devtools::document(setwd(...))
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::install("mojpakiet")
devtools::install()
rnorm(100, 50, 30)
#' on quantile distance
#'
#' @param x vector of values
#'
#' @return vector
#' @export
#'
#' @examples
#' data <- rnorm(100, 50, 30)
#' new_data <- remove_outliers(data)
remove_outliers <- function(x) {
qnt <- stats::quantile(x, probs=c(.25, .75), na.rm = T)
iq <- as.numeric(qnt[2] - qnt[1])
x[x < (qnt[1]-(1.5*iq))] <- NA
x[x > (qnt[2]+(1.5*iq))] <- NA
return(complete.cases(x))
}
remove_outliers(c(1,2,3,4,5,6,7,8,9))
#' on quantile distance
#'
#' @param x vector of values
#'
#' @return vector
#' @export
#'
#' @examples
#' data <- rnorm(100, 50, 30)
#' new_data <- remove_outliers(data)
remove_outliers <- function(x) {
qnt <- stats::quantile(x, probs=c(.25, .75), na.rm = T)
iq <- as.numeric(qnt[2] - qnt[1])
x[x < (qnt[1]-(1.5*iq))] <- NA
x[x > (qnt[2]+(1.5*iq))] <- NA
return(x[complete.cases(x)])
}
remove_outliers(c(1,2,3,4,5,6,7,8,9))
#' on quantile distance
#'
#' @param x vector of values
#'
#' @return vector
#' @export
#'
#' @examples
#' data <- rnorm(100, 50, 30)
#' new_data <- remove_outliers(data)
remove_outliers <- function(
x,
lq = .25,
uq = .75)
{
qnt <- stats::quantile(x, probs=c(lq, uq), na.rm = T)
iq <- as.numeric(qnt[2] - qnt[1])
x[x < (qnt[1]-(1.5*iq))] <- NA
x[x > (qnt[2]+(1.5*iq))] <- NA
return(x[complete.cases(x)])
}
remove_outliers(c(1,2,3,4,5,6,7,8,9), .1, .9)
remove_outliers(rnorm(100, 50, 30), .1, .9)
remove_outliers(rnorm(100, 50, 30), .25, .75)
seq(10000)
sample(seq(10000), 100)
remove_outliers(sample(seq(10000), 100), .25, .75)
seq(10000)
range(10000)
remove_outliers(rnorm(100, 50, 120), .25, .75)
rnorm(100, 50, 120)boxplot())
boxplot(rnorm(100, 50, 120))
boxplot(sample(100000, 50))
c(1,1,1,1,1,1,1,1,99)
boxplot(c(1,1,1,1,1,1,1,1,99))
boxplot(c(1,1,1,1,1,99))
data <- c(1,1,1,1,1,99)
new_data <- remove_outliers(data)
devtools::check()
devtools::check()
devtools::document()
devtools::load_all()
devtools::load_all()
devtools::document()
devtools::check()
?remove_outliers
devtools::load_all()
devtools::check()
usethis::use_mit_license(c('MichaÅ‚ Woda'))
devtools::check()
install.packages("gitcreds")
gitcreds::gitcreds_set()
